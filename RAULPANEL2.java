import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;

import javax.swing.Timer;

/**
 *
 * @author RaulL
 */
public class RAULPANEL2 extends javax.swing.JPanel {
   int coordonataxpatratalb=0;
     int coordonataypatratalb=0;
    public Rectangle2D r2= new Rectangle2D.Double(0,0,12,100);
  public Ellipse2D el1=new Ellipse2D.Double(0,0,30,30);
    public Rectangle2D r5= new Rectangle2D.Double(0,0,50,50);
    
    public Ellipse2D el2=new Ellipse2D.Double(coordonataxpatratalb,coordonataypatratalb,30,30);
    
    public Rectangle2D r4=new Rectangle2D.Double(0,0,12,100);
    public Rectangle2D r6= new Rectangle2D.Double(0,0,25,25);
    //IMPLEMENTARE TCPTRACE
   
   
   
   
   
   
   
   
   
    
    
    Timer t;
    
    
    
    
    
    
    double i=0;
    double b=0;
    double c=0;
    double d=0;
    double e=0;
    double a=0;
    double h=0;//variabila pentru deplasare la dreapta(+)
    double k=0;//variabila pentru deplasarea la stanga(-)
    //VARIABILE POS1
    double i1=0;
    double b1=0;
    double c1=0;
    double d1=0;
    double e1=0;
    double a1=0;
    double h1=0;
    double k1=0;
    //VARIABILE POS2
    double i2=0;
    double b2=0;
    double c2=0;
    double d2=0;
    double e2=0;
    double a2=0;
    double h2=0;
    double k2=0;
    boolean C0Left=false;
    boolean C0Right=false;
    boolean afisare=false;
    boolean AfisareInitiala=true;
    boolean C0RReleased=false;
    boolean C0LRELEASED=false;
    boolean C1LReleased=false;
    boolean C1Left=false;
    boolean C1Right=false;
    boolean C1RRELEASED=false;
  boolean LEFTPRESS=false;
    boolean LEFTRELEASE=false;
    boolean RIGHTPRESS=false;
    boolean RIGHTRELEASE=false;
    /** Creates new form RAULPANEL2 */
    public RAULPANEL2() {
   
       
        
        
        
        t = new Timer(1, new ActionListener() {
                    public void actionPerformed(ActionEvent ae) {
                       
                        //r3=new Rectangle2D.Double(0,80,10,100);
                       // r2 =new Rectangle2D.Double(0,0,12,100);
                       // r4=new Rectangle2D.Double(0,0,10,80);
                        //System.out.println(i);
                       // if (i != 10000050)
                           // i = i + 0.1;
                       // else
                         //  t.stop();
                        repaint();
                        
                    }
          
                });
    
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
    }//GEN-END:initComponents

  
  
  
  
  
   
  
  
   
  
    public void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2 = (Graphics2D) g;
            
   
   //coordonataxpatratalb =  (coordonataxpatratalb +1);
   
    //coordonataypatratalb =  (coordonataypatratalb +1);
         // coordonataypatratalb++;
           // g2.setColor(Color.RED);
            //g2.fillOval(coordonataxpatratalb, coordonataypatratalb, 10, 10);
   // g2.fillOval(coordonataxpatratalb-1, coordonataypatratalb-1, 10, 10);
          //  System.out.println("coordonatele"+coordonataxpatratalb);
            
            
            
            
            
           
    setBackground(Color.white);
    
  //C0L PRESSED
            
            if(C0Left==true){    
                 g2.translate(h,0);
                g2.translate(200,300);
                      g2.rotate(3.15);        
                t.start();
                a=a-0.1;
                g2.rotate((a+i)/100);
                g2.setColor(Color.BLUE);
                g2.fill(r2);
                g2.draw(r2);
                g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                g2.rotate((c+d)/100);
                g2.setColor(Color.GREEN);
                g2.fill(r4);
                g2.draw(r4);
                //GRIPER
                g2.translate(-17.5,100);
                g2.setColor(Color.ORANGE);
                g2.fill(r5);
                g2.draw(r5);
                //FINGER SPACE
                g2.translate(12.5,26);
                g2.setColor(Color.WHITE);
                g2.fill(r6);
                g2.draw(r6);
                g2.translate(-12.5,-26);
                //FINGER SPACE
                g2.translate(17.5,-100);
                //GRIPER
                g2.rotate(-(c+d)/100);
                g2.translate(-10,-15);
               g2.setColor(Color.BLACK);
                g2.fill(el1);
                g2.draw(el1);
               repaint();
                 
 //(C0R)PRESSED
            } else if(C0Right==true){
                g2.translate(h,0);
                     g2.translate(200,300);
                        g2.rotate(3.15); 
                g2.rotate((a+i)/100);
                t.start();
               i=i+0.1;
                
                  g2.setColor(Color.BLUE);
                 g2.fill(r2);
                 g2.draw(r2);
                 g2.setColor(Color.GREEN);
                g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                g2.rotate((c+d)/100);
              g2.fill(r4);
                  g2.draw(r4);
                //GRIPER
                g2.translate(-17.5,100);
                g2.setColor(Color.ORANGE);
                g2.fill(r5);
                g2.draw(r5);
                //FINGER SPACE
                g2.translate(12.5,26);
                g2.setColor(Color.WHITE);
                g2.fill(r6);
                g2.draw(r6);
                g2.translate(-12.5,-26);
                //FINGER SPACE
                g2.translate(17.5,-100);
                //GRIPER
                g2.rotate(-(c+d)/100);
                g2.translate(-10,-15);
                g2.setColor(Color.BLACK);
                g2.fill(el1);
                g2.draw(el1);
               // System.out.println("C0RPRESSED");
                 repaint();
                  
     
//C0R RELEASED 
            }  else if (C0RReleased==true){
                g2.translate(h,0);
                g2.translate(200,300);
        g2.rotate(3.15);
                g2.rotate((a+i)/100);
                     
                      
                g2.setColor(Color.RED);
                g2.fill(r2);
                g2.draw(r2);
                g2.setColor(Color.PINK);
                g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                g2.rotate((c+d)/100);
                g2.fill(r4);
                g2.draw(r4);
                //GRIPER
                g2.translate(-17.5,100);
                g2.setColor(Color.ORANGE);
                g2.fill(r5);
                g2.draw(r5);
                //FINGER SPACE
                g2.translate(12.5,26);
                g2.setColor(Color.WHITE);
                g2.fill(r6);
                g2.draw(r6);
                g2.translate(-12.5,-26);
                //FINGER SPACE
                g2.translate(17.5,-100);
                //GRIPER
                g2.rotate(-(c+d)/100);
                g2.translate(-10,-15);
                g2.setColor(Color.BLACK);
                g2.fill(el1);
                g2.draw(el1);
                //System.out.println("C0RRELEASED");
                repaint();
               
              
                
                
//STATEA INITIALA IN CARE V-A APAREA FRAMEUL   
            }else if (AfisareInitiala==true){
                g2.translate(170,50);
               // g2.rotate(45);
                g2.setColor(Color.ORANGE);
                g2.fill(r5);
                g2.draw(r5);
                //FINGERS SPACE
                g2.translate(13,0);
                
                g2.setColor(Color.WHITE);
                g2.fill(r6);
                g2.draw(r6);
                g2.translate(-13,0);
                //FINGERS SPACE
                g2.translate(-170,-50);
                g2.translate(200,300);
                      g2.rotate(3.15);
                g2.setColor(Color.RED);
                g2.fill(r2);
                g2.draw(r2);
               g2.translate(0,100);
                g2.setColor(Color.PINK);
                g2.fill(r4);
                g2.draw(r4);
                g2.translate(-10,-15);
                g2.setColor(Color.BLACK);
                g2.fill(el1);
                g2.draw(el1);
                //System.out.println("INITIAL STATE");
                repaint();
              
                
           
                
//C0L RELEASED
            } else if(C0LRELEASED==true){    
                     g2.translate(h,0);
                g2.translate(200,300);
                      g2.rotate(3.15);
                     g2.rotate((a+i)/100);
                g2.setColor(Color.RED);
                g2.fill(r2);
                g2.draw(r2);
                
               g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                     g2.rotate((c+d)/100);
               g2.setColor(Color.PINK);
               g2.fill(r4);
               g2.draw(r4);
                     //GRIPER
                     g2.translate(-17.5,100);
                     g2.setColor(Color.ORANGE);
                     g2.fill(r5);
                     g2.draw(r5);
                     //FINGER SPACE
                     g2.translate(12.5,26);
                     g2.setColor(Color.WHITE);
                     g2.fill(r6);
                     g2.draw(r6);
                     g2.translate(-12.5,-26);
                     //FINGER SPACE
                     g2.translate(17.5,-100);
                     //GRIPER
                     g2.rotate(-(c+d)/100);
                     g2.translate(-10,-15);
                     g2.setColor(Color.BLACK);
                     g2.fill(el1);
                     g2.draw(el1);
                     repaint();
                // System.out.println("C0LRELEASED");
//C1L PRESSED
                 } else if(C1Left==true){
     g2.translate(h,0);
                  g2.translate(200,300);
                        g2.rotate(3.15);
     
     g2.rotate((a+i)/100);
                  g2.setColor(Color.MAGENTA);
                  g2.fill(r2);
                  g2.draw(r2); 
                   g2.setColor(Color.ORANGE);
                  g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos    
                  t.start();
                   c=c-0.1;
     g2.rotate((c+d)/100);
                   g2.fill(r4);
                   g2.draw(r4);
                   //GRIPER
                  
                   g2.translate(-17.5,100);
                   g2.setColor(Color.ORANGE);
                   g2.fill(r5);
                   g2.draw(r5);
     //FINGER SPACE
     g2.translate(12.5,26);
     g2.setColor(Color.WHITE);
     g2.fill(r6);
     g2.draw(r6);
     g2.translate(-12.5,-26);
     //FINGER SPACE
                   g2.translate(17.5,-100);
     
                   //GRIPER
     g2.rotate(-(c+d)/100);
     
     g2.translate(-10,-15);
     g2.setColor(Color.BLACK);
     g2.fill(el1);
     g2.draw(el1);
    
                  repaint();
 //C1L RELEASED                 
 } else if(C1LReleased==true){  
                g2.translate(h,0);
                 g2.translate(200,300);
                       g2.rotate(3.15);
                g2.rotate((a+i)/100);
                 g2.setColor(Color.MAGENTA);
                 g2.fill(r2);
                 g2.draw(r2); 
                  g2.setColor(Color.ORANGE);
                 g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
              
                 g2.rotate((c+d)/100);
                  g2.fill(r4);
                  g2.draw(r4);
                  //GRIPER
                  g2.translate(-17.5,100);
                  g2.setColor(Color.ORANGE);
                  g2.fill(r5);
                  g2.draw(r5);
                //FINGER SPACE
                g2.translate(12.5,26);
                g2.setColor(Color.WHITE);
                g2.fill(r6);
                g2.draw(r6);
                g2.translate(-12.5,-26);
                //FINGER SPACE
                  g2.translate(17.5,-100);
                  //GRIPER
                g2.rotate(-(c+d)/100);
                g2.translate(-10,-15);
                g2.setColor(Color.BLACK);
                g2.fill(el1);
                g2.draw(el1);
                 repaint(); 
                 //System.out.println("C1RRELEASED");
    //C1R PRESSED             
            } else if(C1Right==true){
       g2.translate(h,0);
                g2.translate(200,300);
                      g2.rotate(3.15);
       g2.rotate((a+i)/100);
       
                g2.setColor(Color.MAGENTA);
                g2.fill(r2);
                g2.draw(r2); 
      
                 g2.setColor(Color.ORANGE);
                g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                
                t.start();
                 d=d+0.1;
      // g2.rotate((c+d)/100);
              //   g2.fill(r4);
               //  g2.draw(r4);  
       g2.setColor(Color.ORANGE);
       g2.rotate((c+d)/100);
                        g2.fill(r4);
                        g2.draw(r4);
                        //GRIPER
                        g2.translate(-17.5,100);
                        g2.setColor(Color.ORANGE);
                        g2.fill(r5);
                        g2.draw(r5);
       //FINGER SPACE
       g2.translate(12.5,26);
       g2.setColor(Color.WHITE);
       g2.fill(r6);
       g2.draw(r6);
       g2.translate(-12.5,-26);
       //FINGER SPACE
                        g2.translate(17.5,-100);
                        //GRIPER
       
       g2.rotate(-(c+d)/100);
       g2.translate(-10,-15);
       g2.setColor(Color.BLACK);
       g2.fill(el1);
       g2.draw(el1);
      
                 
                repaint();
   //C1R RELEASED       
   
   } else if(C1RRELEASED==true){ 
                 g2.translate(h,0);
                 g2.translate(200,300);
                       g2.rotate(3.15);
                 g2.rotate((a+i)/100);
                 g2.setColor(Color.MAGENTA);
                 g2.fill(r2);
                 g2.draw(r2); 
                  g2.setColor(Color.ORANGE);
                 g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
                 
                 g2.rotate((c+d)/100);
               
                  g2.fill(r4);
                  g2.draw(r4);
                 //GRIPER
                 g2.translate(-17.5,100);
                 g2.setColor(Color.ORANGE);
                 g2.fill(r5);
                 g2.draw(r5);
                 //FINGER SPACE
                 g2.translate(12.5,26);
                 g2.setColor(Color.WHITE);
                 g2.fill(r6);
                 g2.draw(r6);
                 g2.translate(-12.5,-26);
                 //FINGER SPACE
                 g2.translate(17.5,-100);
                 //GRIPER
                 g2.rotate(-(c+d)/100);
                 g2.translate(-10,-15);
                 g2.setColor(Color.BLACK);
                 g2.fill(el1);
                 g2.draw(el1);
                 repaint(); 
            
             }else if(LEFTPRESS==true){
                t.start();
                h=h-0.1;
    g2.translate(h,0);
    g2.translate(200,300);
          g2.rotate(3.15);
    g2.rotate((a+i)/100);
    g2.setColor(Color.MAGENTA);
    g2.fill(r2);
    g2.draw(r2); 
     g2.setColor(Color.ORANGE);
    g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
    
    g2.rotate((c+d)/100);
    
     g2.fill(r4);
     g2.draw(r4);
    //GRIPER
    g2.translate(-17.5,100);
    g2.setColor(Color.ORANGE);
    g2.fill(r5);
    g2.draw(r5);
    //FINGER SPACE
    g2.translate(12.5,26);
    g2.setColor(Color.WHITE);
    g2.fill(r6);
    g2.draw(r6);
    g2.translate(-12.5,-26);
    //FINGER SPACE
    g2.translate(17.5,-100);
    //GRIPER
    g2.rotate(-(c+d)/100);
    g2.translate(-10,-15);
    g2.setColor(Color.BLACK);
    g2.fill(el1);
    g2.draw(el1);
    repaint(); 
    }else if(RIGHTPRESS==true){  
        t.start();
        h=h+0.1;
        g2.translate(h,0);
        g2.translate(200,300);
        g2.rotate(3.15);
        g2.rotate((a+i)/100);
        g2.setColor(Color.MAGENTA);
        g2.fill(r2);
        g2.draw(r2);
        g2.setColor(Color.ORANGE);
        g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
        
        g2.rotate((c+d)/100);
        
        g2.fill(r4);
        g2.draw(r4);
        //GRIPER
        g2.translate(-17.5,100);
        g2.setColor(Color.ORANGE);
        g2.fill(r5);
        g2.draw(r5);
        //FINGER SPACE
        g2.translate(12.5,26);
        g2.setColor(Color.WHITE);
        g2.fill(r6);
        g2.draw(r6);
        g2.translate(-12.5,-26);
        //FINGER SPACE
        g2.translate(17.5,-100);
        //GRIPER
        g2.rotate(-(c+d)/100);
        g2.translate(-10,-15);
        g2.setColor(Color.BLACK);
        g2.fill(el1);
        g2.draw(el1);
        repaint();        
        }else if((LEFTRELEASE==true)||(RIGHTRELEASE==true)){      
        g2.translate(h,0);
        g2.translate(200,300);
        g2.rotate(3.15);
        g2.rotate((a+i)/100);
        g2.setColor(Color.MAGENTA);
        g2.fill(r2);
        g2.draw(r2);
        g2.setColor(Color.ORANGE);
        g2.translate(0+Math.cos((i+a)/50.), 100+Math.sin((i+a)/50.));//sin si cos
        
        g2.rotate((c+d)/100);
        
        g2.fill(r4);
        g2.draw(r4);
        //GRIPER
        g2.translate(-17.5,100);
        g2.setColor(Color.ORANGE);
        g2.fill(r5);
        g2.draw(r5);
        //FINGER SPACE
        g2.translate(12.5,26);
        //g2.setColor(Color.RED);
        g2.setColor(Color.WHITE);
        g2.fill(r6);
        g2.draw(r6);
        g2.translate(-12.5,-26);
        //FINGER SPACE
        g2.translate(17.5,-100);
        //GRIPER
        g2.rotate(-(c+d)/100);
        g2.translate(-10,-15);
        g2.setColor(Color.BLACK);
        g2.fill(el1);
        g2.draw(el1);
        repaint();            
    } else{
               System.out.println("IDN");
            }
    
   
    
           
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
    
}
